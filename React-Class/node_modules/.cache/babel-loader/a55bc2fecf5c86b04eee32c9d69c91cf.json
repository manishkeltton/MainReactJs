{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/hello-world/src/components/withCounter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatedComponent = OriginalComponent => {\n  class NewComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCount = () => {\n        // this.setState({count: this.state.count+1})\n        this.setState(prevState => {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      cons;\n      return /*#__PURE__*/_jsxDEV(OriginalComponent, {\n        count: this.state.count,\n        incrementCount: this.incrementCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 23\n      }, this);\n    }\n\n  }\n\n  return NewComponent;\n};\n\n_c = UpdatedComponent;\nexport default UpdatedComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatedComponent\");","map":{"version":3,"sources":["/var/www/html/ReactCode/hello-world/src/components/withCounter.js"],"names":["React","UpdatedComponent","OriginalComponent","NewComponent","Component","constructor","props","incrementCount","setState","prevState","count","state","render","cons"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;;;AAEA,MAAMC,gBAAgB,GAAGC,iBAAiB,IAAI;AACxC,QAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAQnBC,cARmB,GAQF,MAAK;AAClB;AACA,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AAAEC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAgB;AAAzB,WAAP;AACH,SAFD;AAGH,OAbkB;;AAGf,WAAKC,KAAL,GAAa;AACRD,QAAAA,KAAK,EAAE;AADC,OAAb;AAGH;;AAQEE,IAAAA,MAAM,GAAE;AACJC,MAAAA,IAAI;AACJ,0BAAO,QAAC,iBAAD;AACF,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWD,KADhB;AAEF,QAAA,cAAc,EAAE,KAAKH;AAFnB;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH;;AArBqC;;AAuB3C,SAAOJ,YAAP;AACL,CAzBD;;KAAMF,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import React  from 'react'\n\nconst UpdatedComponent = OriginalComponent => {\n      class NewComponent extends React.Component {\n        constructor(props) {\n            super(props)\n        \n            this.state = {\n                 count: 0\n            }\n        }\n        \n        incrementCount = () =>{\n            // this.setState({count: this.state.count+1})\n            this.setState(prevState => {\n                return { count: prevState.count+1 }\n            })\n        }\n           render(){\n               cons\n               return <OriginalComponent \n                    count={this.state.count}\n                    incrementCount={this.incrementCount}\n                    />\n           }\n      }\n      return NewComponent\n}\n\nexport default UpdatedComponent;"]},"metadata":{},"sourceType":"module"}