{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/react-memo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport './App.css';\nimport ChildComponent from './components/ChildComponent'; //Not required useMemo and useCallback when use globaly\n// const array = ['one', 'Two', 'Three'];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchData = type => {\n  return fetch(`https://jsonplaceholder.typicode.com/${type}`).then(response => response.json()).then(json => console.log(json));\n};\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  console.log(\"parent component\"); // const array = ['one', 'Two', 'Three'];\n  //useMemo\n  // const array = useMemo(() => {\n  //   return [\"one\", \"two\", \"three\"]\n  // },[])\n  //useCallback\n\n  const fetchData = useCallback(type => {\n    return fetch(`https://jsonplaceholder.typicode.com/${type}`).then(response => response.json()).then(json => console.log(json));\n  }, []);\n  useEffect(() => {\n    fetchData('todos');\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setCount(count + 1),\n      children: [\"Count - \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChildComponent, {\n      title: \"This is title\",\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/1aTDOgGGPxH2MHfbl+cCUOnlCs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/html/ReactCode/react-memo/src/App.js"],"names":["useCallback","useEffect","useMemo","useState","ChildComponent","fetchData","type","fetch","then","response","json","console","log","App","count","setCount"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,6BAA3B,C,CAEA;AACA;;;;AAEA,MAAMC,SAAS,GACbC,IAAI,IAAI;AACN,SACIC,KAAK,CAAE,wCAAuCD,IAAK,EAA9C,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFd,CADJ;AAKD,CAPH;;AAWA,SAASG,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAFa,CAGb;AAEA;AACA;AACA;AACA;AAEA;;AACA,QAAMP,SAAS,GAAGL,WAAW,CAC3BM,IAAI,IAAI;AACN,WACIC,KAAK,CAAE,wCAAuCD,IAAK,EAA9C,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFd,CADJ;AAKD,GAP0B,EAOzB,EAPyB,CAA7B;AAQAT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,SAAS,CAAC,OAAD,CAAT;AACD,GAFQ,EAEP,CAACA,SAAD,CAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMU,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7C;AAAA,6BAAiEA,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,eAAtB;AAAsC,MAAA,SAAS,EAAET;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA7BQQ,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport './App.css';\nimport ChildComponent from './components/ChildComponent';\n\n//Not required useMemo and useCallback when use globaly\n// const array = ['one', 'Two', 'Three'];\n\nconst fetchData = \n  type => {\n    return (\n        fetch(`https://jsonplaceholder.typicode.com/${type}`)\n        .then(response => response.json())\n        .then(json => console.log(json))\n    )\n  };\n\n\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  console.log(\"parent component\")\n  // const array = ['one', 'Two', 'Three'];\n\n  //useMemo\n  // const array = useMemo(() => {\n  //   return [\"one\", \"two\", \"three\"]\n  // },[])\n\n  //useCallback\n  const fetchData = useCallback(\n    type => {\n      return (\n          fetch(`https://jsonplaceholder.typicode.com/${type}`)\n          .then(response => response.json())\n          .then(json => console.log(json))\n      )\n    },[]);\n  useEffect(() => {\n    fetchData('todos')\n  },[fetchData])\n\n  return (\n    <div className=\"App\">\n      <button type=\"button\" onClick={() => setCount(count+1)}>Count - {count}</button>\n      <ChildComponent title=\"This is title\" fetchData={fetchData}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}