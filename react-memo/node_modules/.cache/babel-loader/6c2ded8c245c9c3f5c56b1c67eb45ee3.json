{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/react-memo/src/components/ChildComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChildComponent = props => {\n  console.log('Re-rendering child component');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 20\n      }, this), \"ChildComponent \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ChildComponent;\nexport default _c2 = /*#__PURE__*/React.memo(ChildComponent);\n/**  React.memo -> React.memo only checks for prop changes. return true if passing nextProps to render would return\n                   the same result as passing prevProps to render,\n                   otherwise return false Ex :- send the props only \n */\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChildComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/var/www/html/ReactCode/react-memo/src/components/ChildComponent.js"],"names":["React","PropTypes","ChildComponent","props","console","log","title","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,sBAAO;AAAA,2BAAK;AAAA,8BAAG;AAAA,kBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,cAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHD;;KAAMJ,c;AAKN,kCAAeF,KAAK,CAACO,IAAN,CAAWL,cAAX,CAAf;AAIA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ChildComponent = props => {\n    console.log('Re-rendering child component')\n    return <div><p><h2>{props.title}</h2>ChildComponent </p></div> \n}\n\nexport default React.memo(ChildComponent)\n\n\n\n/**  React.memo -> React.memo only checks for prop changes. return true if passing nextProps to render would return\n                   the same result as passing prevProps to render,\n                   otherwise return false Ex :- send the props only \n */"]},"metadata":{},"sourceType":"module"}