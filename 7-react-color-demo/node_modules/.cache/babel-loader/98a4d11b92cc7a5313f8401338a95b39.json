{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/7-react-color-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [color, setColor] = useState('#fff');\n  const [state, setstate] = useState(initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ChromePicker, {\n      color: color,\n      onChange: updatedColor => setColor(updatedColor)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You picked \", color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vhLQAh/Gc0cHiWjahupfCt5n//w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/var/www/html/ReactCode/7-react-color-demo/src/App.js"],"names":["React","useState","ChromePicker","App","color","setColor","state","setstate","initialState","updatedColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACO,YAAD,CAAlC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEJ,KADT;AAEE,MAAA,QAAQ,EAAEK,YAAY,IAAIJ,QAAQ,CAACI,YAAD;AAFpC;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gCAAgBL,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAbQD,G;;KAAAA,G;AAeT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport { ChromePicker } from 'react-color'\nimport './App.css';\n\nfunction App() {\n  const [color, setColor] = useState('#fff')\n  const [state, setstate] = useState(initialState)\n\n  return (\n    <div className=\"App\">\n      <ChromePicker \n        color={color} \n        onChange={updatedColor => setColor(updatedColor)}\n      />\n      <h2>You picked {color}</h2>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}