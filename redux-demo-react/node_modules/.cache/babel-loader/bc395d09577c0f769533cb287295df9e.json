{"ast":null,"code":"var _jsxFileName = \"/var/www/html/MainReactJs/redux-demo-react/src/components/UserContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserContainer({\n  userData,\n  fetchUsers\n}) {\n  _s();\n\n  console.log();\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 82\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this);\n}\n\n_s(UserContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = UserContainer;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContainer\");","map":{"version":3,"sources":["/var/www/html/MainReactJs/redux-demo-react/src/components/UserContainer.js"],"names":["React","useEffect","connect","fetchUsers","UserContainer","userData","console","log","loading","error","users","map","user","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,UAA3B;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAvB,EAAiD;AAAA;;AAE7CG,EAAAA,OAAO,CAACC,GAAR;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,UAAU;AACb,GAFQ,EAEP,EAFO,CAAT;AAGA,SACIE,QAAQ,CAACG,OAAT,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GAEGH,QAAQ,CAACI,KAAT,gBACD;AAAA,cAAKJ,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,UADC,gBAGC;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAEQJ,QAAQ,IAAIA,QAAQ,CAACK,KAArB,IAA8BL,QAAQ,CAACK,KAAT,CAAeC,GAAf,CAAmBC,IAAI,iBAAI;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAA3B;AAFtC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UANR;AAgBH;;GAvBQT,a;;KAAAA,a;;AAyBT,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,QAAQ,EAAEU,KAAK,CAACH;AADb,GAAP;AAGH,CAJD;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHd,IAAAA,UAAU,EAAE,MAAMc,QAAQ,CAACd,UAAU,EAAX;AADvB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../redux'\n\nfunction UserContainer({ userData, fetchUsers }) {\n\n    console.log();\n\n    useEffect(() => {\n        fetchUsers()\n    },[])\n    return (\n        userData.loading ? (\n            <h2>Loading</h2>\n        ): userData.error ? (\n          <h2>{userData.error}</h2> \n        ) : (\n            <div>\n                <h2>User List</h2>\n                <div>\n                    {\n                        userData && userData.users && userData.users.map(user => <p>{user.name}</p>)\n                    }\n                </div>\n            </div>\n        )\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        userData: state.user\n    }\n} \n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchUsers: () => dispatch(fetchUsers())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer)\n"]},"metadata":{},"sourceType":"module"}