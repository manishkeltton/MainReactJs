{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/react-hook/src/components/UseReducer/CounterTwo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstCounter: 0,\n  secondCounter: 10\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { ...state,\n        firstCounter: state.firstCounter + action.value\n      };\n\n    case 'decrement':\n      return { ...state,\n        firstCounter: state.firstCounter - action.value\n      };\n\n    case 'increment2':\n      return { ...state,\n        secondCounter: state.secondCounter + action.value\n      };\n\n    case 'decrement2':\n      return {\n        secondCounter: state.secondCounter - action.value\n      };\n\n    case 'reset':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nfunction CounterTwo() {\n  _s();\n\n  const [count, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"First Counter - \", count.firstCounter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Second Counter - \", count.secondCounter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment',\n        value: 1\n      }),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement',\n        value: 1\n      }),\n      children: \"Deccrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment2',\n        value: 1\n      }),\n      children: \"Increment counter 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement2',\n        value: 1\n      }),\n      children: \"Deccrement counter 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment',\n        value: 5\n      }),\n      children: \"Increment 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement',\n        value: 5\n      }),\n      children: \"Deccrement 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'reset'\n      }),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CounterTwo, \"lCuvQ9nV3fBNxlJmZItTAw1hKFs=\");\n\n_c = CounterTwo;\nexport default CounterTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterTwo\");","map":{"version":3,"sources":["/var/www/html/ReactCode/react-hook/src/components/UseReducer/CounterTwo.js"],"names":["React","useReducer","initialState","firstCounter","secondCounter","reducer","state","action","type","value","CounterTwo","count","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,CADG;AAEjBC,EAAAA,aAAa,EAAE;AAFE,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYH,QAAAA,YAAY,EAAEG,KAAK,CAACH,YAAN,GAAqBI,MAAM,CAACE;AAAtD,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAWH,QAAAA,YAAY,EAAEG,KAAK,CAACH,YAAN,GAAqBI,MAAM,CAACE;AAArD,OAAP;;AACJ,SAAK,YAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,GAAsBG,MAAM,CAACE;AAAxD,OAAP;;AACJ,SAAK,YAAL;AACI,aAAO;AAACL,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,GAAsBG,MAAM,CAACE;AAA7C,OAAP;;AACJ,SAAK,OAAL;AACI,aAAOP,YAAP;;AACJ;AACI,aAAOI,KAAP;AAZR;AAcH,CAfD;;AAiBA,SAASI,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACI,OAAD,EAAUH,YAAV,CAApC;AACA,sBACI;AAAA,4BACI;AAAA,qCAAsBS,KAAK,CAACR,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sCAAuBQ,KAAK,CAACP,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,KAAK,EAAC;AAA1B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,KAAK,EAAC;AAA1B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,KAAK,EAAC;AAA1B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,KAAK,EAAC;AAA1B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE;AAAP,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAfQE,U;;KAAAA,U;AAiBT,eAAeA,UAAf","sourcesContent":["import React, {useReducer} from 'react'\n\nconst initialState = {\n    firstCounter: 0,\n    secondCounter: 10\n}\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'increment': \n            return { ...state, firstCounter: state.firstCounter + action.value}\n        case 'decrement':\n            return {...state, firstCounter: state.firstCounter - action.value}\n        case 'increment2': \n            return { ...state, secondCounter: state.secondCounter + action.value}\n        case 'decrement2':\n            return {secondCounter: state.secondCounter - action.value}\n        case 'reset':\n            return initialState\n        default:\n            return state\n    }\n}\n\nfunction CounterTwo() {\n    const [count, dispatch] = useReducer(reducer, initialState)\n    return (\n        <div>\n            <div>First Counter - {count.firstCounter}</div>\n            <div>Second Counter - {count.secondCounter}</div>\n            <button onClick={() => dispatch({type: 'increment', value:1})}>Increment</button>\n            <button onClick={() => dispatch({type: 'decrement', value:1})}>Deccrement</button>\n            <button onClick={() => dispatch({type: 'increment2', value:1})}>Increment counter 2</button>\n            <button onClick={() => dispatch({type: 'decrement2', value:1})}>Deccrement counter 2</button>\n            <button onClick={() => dispatch({type: 'increment', value:5})}>Increment 5</button>\n            <button onClick={() => dispatch({type: 'decrement', value:5})}>Deccrement 5</button>\n            <button onClick={() => dispatch({type: 'reset'})}>Reset</button>\n        </div>\n    )\n}\n\nexport default CounterTwo\n"]},"metadata":{},"sourceType":"module"}