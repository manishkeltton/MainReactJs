{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/react-formik/src/components/OldYoutubeForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup'; //Managing the form state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: '',\n  email: '',\n  channel: ''\n}; //Handling form submission\n\nconst onSubmit = values => {\n  console.log(\" Form Data\", values);\n}; //Form Validation \n\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Required!'),\n  email: Yup.string().email('Invalid email format').required('Required'),\n  channel: Yup.string().required('Required')\n});\n\nfunction OldYoutubeForm() {\n  _s();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validationSchema // validate\n\n  }); // console.log(\"Visited Field\", formik.touched);\n  // console.log(\"Formik error\", formik.error);\n  // console.log(\"Formik values\", formik.values)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\" // value={formik.values.name}\n          // onBlur={formik.handleBlur}//helper method  \n          // onChange={formik.handleChange} \n          // {...formik.getFieldProps('name')}\n          ,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\" // value={formik.values.email} \n          // onBlur={formik.handleBlur}\n          // onChange={formik.handleChange}\n          ,\n          ...getFieldProps('email'),\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\" // value={formik.values.channel} \n          // onBlur={formik.handleBlur}\n          // onChange={formik.handleChange}\n          ,\n          ...formik.getFieldProps('channel'),\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), formik.touched.channel && formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OldYoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = OldYoutubeForm;\nexport default OldYoutubeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OldYoutubeForm\");","map":{"version":3,"sources":["/var/www/html/ReactCode/react-formik/src/components/OldYoutubeForm.js"],"names":["React","useFormik","Yup","initialValues","name","email","channel","onSubmit","values","console","log","validationSchema","object","string","required","OldYoutubeForm","formik","handleSubmit","touched","errors","getFieldProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\n//Managing the form state\nconst initialValues = {\n    name: '',\n    email: '',\n    channel: ''\n}\n\n//Handling form submission\nconst onSubmit = values => {\n    console.log(\" Form Data\", values);\n}\n\n//Form Validation \nconst validationSchema = Yup.object({\n    name: Yup.string().required('Required!'),\n    email: Yup.string().email('Invalid email format').required('Required'),\n    channel: Yup.string().required('Required')\n})\n\nfunction OldYoutubeForm() {\n\n    const formik = useFormik({  \n        initialValues,\n        onSubmit,\n        validationSchema,\n        // validate\n    });\n\n    // console.log(\"Visited Field\", formik.touched);\n    // console.log(\"Formik error\", formik.error);\n    // console.log(\"Formik values\", formik.values)\n\n    return (\n        <div>\n            <form onSubmit={formik.handleSubmit}>\n                <div className='form-control'>\n                    <label htmlFor='name'>Name</label>\n                    <input \n                        type='text' \n                        id='name' \n                        name='name' \n                        // value={formik.values.name}\n                        // onBlur={formik.handleBlur}//helper method  \n                        // onChange={formik.handleChange} \n                        // {...formik.getFieldProps('name')}\n                        autoComplete=\"off\"\n                    />\n                    { formik.touched.name && formik.errors.name ? (\n                        <div className='error'>{formik.errors.name}</div>\n                    ) : null}\n                </div>\n\n                <div className='form-control'>\n                    <label htmlFor='email'>E-mail</label>\n                    <input \n                        type='email' \n                        id='email' \n                        name='email' \n                        // value={formik.values.email} \n                        // onBlur={formik.handleBlur}\n                        // onChange={formik.handleChange}\n                        {...getFieldProps('email')} \n                        autoComplete=\"off\"\n                    />\n                    {formik.touched.email && formik.errors.email ? (\n                        <div className='error'>{formik.errors.email}</div>\n                    ) : null}\n                </div>\n\n                <div className='form-control'>\n                    <label htmlFor='channel'>Channel</label>\n                    <input \n                        type='text' \n                        id='channel' \n                        name='channel' \n                        // value={formik.values.channel} \n                        // onBlur={formik.handleBlur}\n                        // onChange={formik.handleChange}\n                        {...formik.getFieldProps('channel')} \n                        autoComplete=\"off\"\n                    />\n                    { formik.touched.channel && formik.errors.channel ? (\n                        <div className='error'>{formik.errors.channel}</div>\n                    ) : null}\n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default OldYoutubeForm\n"]},"metadata":{},"sourceType":"module"}