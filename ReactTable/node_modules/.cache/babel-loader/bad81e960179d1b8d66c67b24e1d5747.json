{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/ReactTable/src/components/SortingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy, useGlobalFilter } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, GROUPED_COLUMNS } from './columns';\nimport './table.css';\nimport { GlobalFilter } from './GlobalFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SortingTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useGlobalFilter);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = tableInstance;\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      filter: globalFilter,\n      setFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' Des' : ' Asc' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroup.getFooterGroupProps(),\n          children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterGroupProps,\n            children: column.render('Footer')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SortingTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = SortingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingTable\");","map":{"version":3,"sources":["/var/www/html/ReactCode/ReactTable/src/components/SortingTable.js"],"names":["React","useMemo","useTable","useSortBy","useGlobalFilter","MOCK_DATA","COLUMNS","GROUPED_COLUMNS","GlobalFilter","SortingTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable, useSortBy,useGlobalFilter } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS, GROUPED_COLUMNS } from './columns'\nimport './table.css'\nimport { GlobalFilter } from './GlobalFilter'\n\nexport const SortingTable = () => {\n\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n                              columns,\n                              data\n                          },\n                          useGlobalFilter)\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter,\n    } = tableInstance\n\n    const { globalFilter } = state\n\n    return (\n        <>\n            <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {\n                            headerGroup.headers.map( column => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render('Header')}\n                                <span>\n                                    {column.isSorted ? (column.isSortedDesc ? ' Des':' Asc'):''}\n                                </span></th>\n                                ))\n                        }\n                    </tr>\n                ))}               \n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {\n                    rows.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map( cell => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })\n                }\n            </tbody>\n            <tfoot>\n                {\n                    footerGroups.map(footerGroup => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                            {\n                                footerGroup.headers.map(column => (\n                                    <td {...column.getFooterGroupProps}>\n                                        {\n                                            column.render('Footer')\n                                        }\n                                    </td>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </tfoot>\n        </table>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}