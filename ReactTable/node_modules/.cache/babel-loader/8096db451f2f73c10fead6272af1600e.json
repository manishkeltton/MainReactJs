{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ReactCode/ReactTable/src/components/FilteringTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useGlobalFilter, useFilters } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, GROUPED_COLUMNS } from './columns';\nimport './table.css';\nimport { GlobalFilter } from './GlobalFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FilteringTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const defaultColumn = useMemo(() => {\n    return {\n      Filter: ColumnFilter\n    };\n  });\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useFilters, useGlobalFilter);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter\n  } = tableInstance;\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n      filter: globalFilter,\n      setFilter: setGlobalFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 52\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroup.getFooterGroupProps(),\n          children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterGroupProps,\n            children: column.render('Footer')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilteringTable, \"E7MLHYTxo734gKRf70DblL2he8Q=\", false, function () {\n  return [useTable];\n});\n\n_c = FilteringTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteringTable\");","map":{"version":3,"sources":["/var/www/html/ReactCode/ReactTable/src/components/FilteringTable.js"],"names":["React","useMemo","useTable","useGlobalFilter","useFilters","MOCK_DATA","COLUMNS","GROUPED_COLUMNS","GlobalFilter","FilteringTable","columns","data","defaultColumn","Filter","ColumnFilter","tableInstance","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useTable, useGlobalFilter, useFilters } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS, GROUPED_COLUMNS } from './columns'\nimport './table.css'\nimport { GlobalFilter } from './GlobalFilter'\n\nexport const FilteringTable = () => {\n\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n    const defaultColumn = useMemo(() => {\n        return {\n            Filter: ColumnFilter\n        }\n    })\n\n    const tableInstance = useTable({\n                              columns,\n                              data\n                          },useFilters,useGlobalFilter)\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        state,\n        setGlobalFilter,\n    } = tableInstance\n\n    const { globalFilter } = state\n\n    return (\n        <>\n            <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter}/>\n            <table {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {\n                                headerGroup.headers.map( column => (\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}\n                                    <div>{column.canFilter ? column.render('Filter'): null}</div></th>\n                                ))\n                            }\n                        </tr>\n                    ))}               \n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {\n                        rows.map(row => {\n                            prepareRow(row)\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {\n                                        row.cells.map( cell => {\n                                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n                <tfoot>\n                    {\n                        footerGroups.map(footerGroup => (\n                            <tr {...footerGroup.getFooterGroupProps()}>\n                                {\n                                    footerGroup.headers.map(column => (\n                                        <td {...column.getFooterGroupProps}>\n                                            {\n                                                column.render('Footer')\n                                            }\n                                        </td>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </tfoot>\n            </table>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}